docker-compose up

docker run -d -it --name oracle1930ee -p 15521:1521 -p 8081:8081 --ip=172.18.0.4 -e ORACLE_SID=ORCL -e ORACLE_PDB=ORCLPDB -e ORACLE_PWD=Oracle12345  -v D:\Arquitetura\Logminer\volumeAuxiliar:/volumeAuxiliar banglamon/oracle193db:19.3.0-ee
docker run -d -it --name oracle1930LGPD -p 15421:1521 -p 8081:8081 -e ORACLE_SID=ORCL  -e ORACLE_CHARACTERSET=WE8MSWIN1252  -e ORACLE_PDB=ORCLPDB -e ORACLE_PWD=Oracle12345  -v D:\Arquitetura\Logminer\volumeAuxiliar:/volumeAuxiliar --env-file .\Variaveis.env  banglamon/oracle193db:19.3.0-ee
docker run -d -p 8000:8000 -p 9000:9000 --name=portainer  -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce
docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=P@ssw0rd" -e "MSSQL_PID=Enterprise" -e "MSSQL_AGENT_ENABLED=True" --name sqlServer -p 1433:1433 -v D:\Arquitetura\docker_volumes\sqlserver\volumeAuxiliar:/volumeAuxiliar/ -d mcr.microsoft.com/mssql/server:2017-latest
docker run -p 4443:4443 -e EXTERNAL_SERVER_URL=localhost:4443 -e RUNDECK_WITH_SSL=true -e SMTP_HOST=localhost -e SMTP_PORT=1025 --name rundeckjordan -t jordan/rundeck:latest
docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true -p 9000:9000 sonarqube:latest
/////docker run --name rundeck123 -p 4440:4440 -v D:\Arquitetura\Rundeck\volumeAuxiliar:/volumeAuxiliar/  -e RUNDECK_DATABASE_URL=jdbc:postgresql://localhost:5432/rundeck -e RUNDECK_DATABASE_DRIVER=org.postgresql.Driver -e RUNDECK_DATABASE_USERNAME=rundeckuser -e RUNDECK_DATABASE_PASSWORD=rundeckpassword rundeck/rundeck:3.3.10
/////docker run --name some-rundeck -p 4440:4440 -v data:/home/rundeck/server/data v D:\Arquitetura\Rundeck\volumeAuxiliar:/volumeAuxiliar/ rundeck/rundeck:3.3.10
docker run -it  --name nifisolo -p 8095:8080  -e NIFI_JVM_HEAP_INIT=2g -e NIFI_JVM_HEAP_MAX=4g -i -v D:\Arquitetura\ApacheNifi\volumeAuxiliar:/volumeAuxiliar/ -d apache/nifi:latest

docker build -f dockerfile -t luciocouto/nifi .
docker run -it  --name nifi -p 8091:8080  -e NIFI_JVM_HEAP_INIT=2g -e NIFI_JVM_HEAP_MAX=4g -i -v D:\Arquitetura\ApacheNifi\volumeAuxiliar:/volumeAuxiliar/  luciocouto/nifi
docker run -d --name mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=mongo -e MONGO_INITDB_ROOT_PASSWORD=12345 mongo
docker run -d -it --name oracle1930LGPD -p 15521:1521 -p 8081:8081 -e ORACLE_SID=ORCL  -e ORACLE_CHARACTERSET=WE8MSWIN1252  -e ORACLE_PDB=ORCLPDB -e ORACLE_PWD=Oracle12345  -v D:\Arquitetura\Logminer\volumeAuxiliar:/volumeAuxiliar --env-file .\Variaveis.env  banglamon/oracle193db:19.3.0-ee
docker run -p 1480:8080 --name=keycloak -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/keycloak:13.0.0
docker run -d --name couchdb -p 5984:5984 -e COUCHDB_USER=couch -e COUCHDB_PASSWORD=couch couchdb
docker run -it --rm --name cassandra -p7000:7000 -p7001:7001 -p9042:9042 -p9160:9160 cassandra:2.2
docker run -it --rm --name connect -p 8083:8083 -e GROUP_ID=1 -e CONFIG_STORAGE_TOPIC=my_connect_configs -e OFFSET_STORAGE_TOPIC=my_connect_offsets -e STATUS_STORAGE_TOPIC=my_connect_statuses --link zookeeper:zookeeper --link oracle:oracle --link kafka:kafka --link sqlServer7:sqlServer7 debezium/connect:1.3
docker run -d -p 15521:1521 --name oraclelogminer --volume D:\Arquitetura\Debezium\volumeAuxiliar:/volumeAuxiliar/ hothamandcheese/oracle-18.4.0-x
docker run --link debezium_kafka_1:debezium_kafka_1 -p 19000:9000 -e "KAFKA_BROKERCONNECT=debezium_kafka_1:9092" --network debezium_default --name kafdrop obsidiandynamics/kafdrop:latest
docker run -it --name ubuntu -v D:\Arquitetura\ubuntu\volumeAuxiliar:/volumeAuxiliar/  ubuntu

docker run -d --name dev-postgres -e POSTGRES_USER=user -e POSTGRES_PASSWORD=P@ssw0rd -v D:\Arquitetura\Rundeck\postgres\volumeAuxiliar:/volumeAuxiliar/  -p 5432:5432 postgres
/////docker build -t lcouto/rundeck .
docker run -d --name grafana -p 3000:3000 grafana/grafana
docker run -d --name prometheus -p 9095:9090 -v D:\Arquitetura\Grafana_Prometheus\volumeAuxiliar:/volumeAuxiliar prom/prometheus --config.file=/volumeAuxiliar/prometheus.yml

docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.13.2
docker run --name postgres -e "POSTGRES_PASSWORD=Postgres2018" -p 5432:5432 -d postgres
docker run -d --name postgres -e POSTGRES_USER=user -e POSTGRES_PASSWORD=P@ssw0rd   -p 5432:5432 postgres

 docker run -it  --name nifi -p 8095:8080  -e NIFI_JVM_HEAP_INIT=2g -e NIFI_JVM_HEAP_MAX=4g -i -v /mnt/d/Arquitetura/ApacheNifi/volumeAuxiliar:/volumeAuxiliar/ -d apache/nifi:1.12.0

######################

docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=P@ssw0rd" -e "MSSQL_PID=Enterprise" -e "MSSQL_AGENT_ENABLED=True" --name sqlServer -p 1433:1433 -v /mnt/d/Arquitetura/docker_volumes/sqlserver/volumeAuxiliar:/volumeAuxiliar/ -d mcr.microsoft.com/mssql/server:2017-latest

docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=P@ssw0rd" -e "MSSQL_PID=Enterprise" -e "MSSQL_AGENT_ENABLED=True" --name sqlServer -p 1433:1433 -v C:\minha_pasta\docker\sqlserver\volumeAuxiliar:/volumeAuxiliar/ -d mcr.microsoft.com/mssql/server:2017-latest

docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=P@ssw0rd" -e "MSSQL_PID=Enterprise" -e "MSSQL_AGENT_ENABLED=True" --name sqlServer -p 1433:1433 -v /mnt/c/minha_pasta/docker/sqlserver/volumeAuxiliar:/volumeAuxiliar/ -d mcr.microsoft.com/mssql/server:2019-latest